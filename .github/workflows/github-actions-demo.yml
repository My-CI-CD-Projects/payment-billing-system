name: Java Maven CI/CD Pipeline

on:
  push:
    branches:
      - main  # Runs on push to main
  pull_request:
    branches:
      - main  # Runs on PR to main

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3  # Fetches the repository

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Alternative: 'zulu', 'adopt', etc.
          java-version: '17'
          cache: 'maven'  # Caches Maven dependencies

      - name: Build & Run Tests
        run: mvn clean package -Dmaven.test.skip=true  # Compiles, runs tests, and packages the app

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: maven-build
          path: target/*.jar  # Uploads the generated JAR file

  docker:
    name: Build & Push Docker Image
    needs: build  # Runs after build completes
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: maven-build
          path: target/

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/my-github-java-app:latest .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-github-java-app:latest

  deploy:
    name: Deploy to Server
    needs: docker  # Runs after Docker image is built & pushed
    runs-on: ubuntu-latest
    environment: DEV
